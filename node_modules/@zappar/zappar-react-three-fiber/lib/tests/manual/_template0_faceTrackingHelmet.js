"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable import/no-webpack-loader-syntax */
/* eslint-disable global-require */
/* eslint-disable import/no-unresolved */
const react_1 = __importStar(require("react"));
const react_dom_1 = require("react-dom");
const GLTFLoader_1 = require("three/examples/jsm/loaders/GLTFLoader");
const index_1 = require("../../src/index");
function Model() {
    const [gltf, set] = react_1.useState();
    react_1.useMemo(() => new GLTFLoader_1.GLTFLoader().load(require("file-loader!../assets/z_helmet.glb").default, set), [require("file-loader!../assets/z_helmet.glb").default]);
    if (gltf) {
        const { scene } = gltf;
        const Helmet = scene.getObjectByName("Helmet");
        return react_1.default.createElement("primitive", { position: [0.25, -1.25, 0.1], object: Helmet });
    }
    return null;
}
function Model2() {
    const [gltf, set] = react_1.useState();
    react_1.useMemo(() => new GLTFLoader_1.GLTFLoader().load(require("file-loader!../assets/z_helmet.glb").default, set), [require("file-loader!../assets/z_helmet.glb").default]);
    if (gltf) {
        const { scene } = gltf;
        const Helmet = scene.getObjectByName("Helmet");
        return react_1.default.createElement("primitive", { position: [0.25, -1.25, 0.1], object: Helmet });
    }
    return null;
}
function App() {
    const zapparCamera = react_1.useRef();
    const faceTrackerGroup = react_1.useRef();
    const [useFirstHelmet, setUseFirstHelmet] = react_1.useState(true);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(index_1.ZapparCanvas, null,
            react_1.default.createElement(index_1.ZapparCamera, { rearCameraMirrorMode: "css", ref: zapparCamera }),
            react_1.default.createElement(index_1.FaceTracker, { camera: zapparCamera, ref: faceTrackerGroup },
                react_1.default.createElement(react_1.Suspense, { fallback: null },
                    react_1.default.createElement(index_1.HeadMaskMesh, { trackerGroup: faceTrackerGroup }),
                    useFirstHelmet ? react_1.default.createElement(Model, null) : react_1.default.createElement(Model2, null))),
            react_1.default.createElement("directionalLight", { position: [2.5, 8, 5], intensity: 1.5 }),
            react_1.default.createElement(index_1.Loader, null)),
        react_1.default.createElement("button", { type: "button", style: { position: "absolute", marginLeft: "50%" }, onClick: () => {
                setUseFirstHelmet((current) => !current);
            } }, "Toggle")));
}
exports.default = App;
react_dom_1.render(react_1.default.createElement(App, null), document.getElementById("root"));
